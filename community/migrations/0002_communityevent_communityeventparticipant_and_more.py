# Generated by Django 5.1.1 on 2024-10-01 12:11

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('community', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=2048)),
                ('event_image', models.CharField(max_length=1024)),
                ('location', models.CharField(max_length=255)),
                ('event_start_date', models.DateField()),
                ('event_end_date', models.DateField()),
                ('event_start_time', models.TimeField()),
                ('event_end_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.community')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommunityEventParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.communityevent')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='communityevent',
            constraint=models.CheckConstraint(condition=models.Q(('event_start_date__lte', models.F('event_end_date'))), name='check_event_dates'),
        ),
        migrations.AddConstraint(
            model_name='communityevent',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('event_start_date', models.F('event_end_date')), ('event_start_time__lt', models.F('event_end_time'))), ('event_start_date__lt', models.F('event_end_date')), _connector='OR'), name='check_event_times'),
        ),
    ]
